definitions:
  dto.AccessToken:
    properties:
      accessToken:
        type: string
    type: object
  dto.HTTPResp:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
  dto.OtpReq:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  dto.UserCheckPhoneNumberReq:
    properties:
      phoneNumber:
        type: string
    type: object
  dto.UserCreateReq:
    properties:
      avatarUrl:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      username:
        type: string
    type: object
  dto.UserDeleteReq:
    properties:
      id:
        type: string
    type: object
  dto.UserInfoResp:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      id:
        type: string
      last_logged_in:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      status:
        type: string
      username:
        type: string
    type: object
  dto.UserListResp:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.UserResp'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  dto.UserLoginReq:
    properties:
      password:
        type: string
      phoneNumber:
        type: string
    type: object
  dto.UserResetPasswordReq:
    properties:
      newPassword:
        type: string
      phoneNumber:
        type: string
    type: object
  dto.UserResp:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      friend_requests:
        items:
          $ref: '#/definitions/dto.UserInfoResp'
        type: array
      friends:
        items:
          $ref: '#/definitions/dto.UserInfoResp'
        type: array
      id:
        type: string
      last_logged_in:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      status:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  dto.UserUpdateReq:
    properties:
      avatar_url:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AccessToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: Login
      tags:
      - authentications
  /api/auth/logout:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: Logout
      tags:
      - authentications
  /api/auth/register:
    post:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: CreateUser
      tags:
      - authentications
  /api/otps/request:
    post:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OtpReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: RequestOtp
      tags:
      - otps
  /api/user/profile:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetProfile
      tags:
      - users
  /api/users:
    delete:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: DeleteUser
      tags:
      - users
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: page of paging
        in: query
        name: page
        type: integer
      - description: size of page of paging
        in: query
        name: page_size
        type: integer
      - description: name of field need to sort
        in: query
        name: sort
        type: string
      - description: sort desc or asc
        in: query
        name: sort_type
        type: string
      - description: keyword to search in model
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserListResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetUserList
      tags:
      - users
    put:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: UpdateUser
      tags:
      - users
  /api/users/{id}:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetUser
      tags:
      - users
  /api/users/{id}/friends/accept:
    post:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: AcceptFriendRequest
      tags:
      - users
  /api/users/{id}/friends/reject:
    delete:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: RejectFriendRequest
      tags:
      - users
  /api/users/{id}/friends/remove:
    delete:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: RemoveFriend
      tags:
      - users
  /api/users/{id}/friends/request:
    post:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: SendFriendRequest
      tags:
      - users
  /api/users/friends/suggest:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: SuggestFriend
      tags:
      - users
  /api/users/reset-password:
    put:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: ResetPassword
      tags:
      - users
swagger: "2.0"
