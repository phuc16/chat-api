definitions:
  dto.AccessToken:
    properties:
      accessToken:
        type: string
    type: object
  dto.AccountChangeAvatarReq:
    properties:
      newAvatar:
        type: string
    type: object
  dto.AccountChangePasswordReq:
    properties:
      curPassword:
        type: string
      newPassword:
        type: string
    type: object
  dto.AccountChangeProfileReq:
    properties:
      birthday:
        type: string
      gender:
        type: boolean
      userName:
        type: string
    type: object
  dto.AccountCheckPhoneNumberReq:
    properties:
      phoneNumber:
        type: string
    type: object
  dto.AccountLoginReq:
    properties:
      password:
        type: string
      phoneNumber:
        type: string
    type: object
  dto.AccountRegisterReq:
    properties:
      password:
        type: string
      phoneNumber:
        type: string
    type: object
  dto.AccountResetPasswordReq:
    properties:
      newPassword:
        type: string
      phoneNumber:
        type: string
    type: object
  dto.CreateGroupReq:
    properties:
      admins:
        items:
          $ref: '#/definitions/entity.PersonInfo'
        type: array
      chatAvatar:
        type: string
      chatName:
        type: string
      createdAt:
        type: string
      id:
        type: string
      members:
        items:
          $ref: '#/definitions/entity.PersonInfo'
        type: array
      owner:
        $ref: '#/definitions/entity.PersonInfo'
      setting:
        $ref: '#/definitions/entity.GroupSetting'
      updatedAt:
        type: string
    type: object
  dto.HTTPResp:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
  entity.Account:
    properties:
      createdAt:
        type: string
      id:
        type: string
      phoneNumber:
        type: string
      profile:
        $ref: '#/definitions/entity.Profile'
      pw:
        type: string
      role:
        type: string
      setting:
        $ref: '#/definitions/entity.Setting'
      type:
        type: string
      updatedAt:
        type: string
    type: object
  entity.ChatActivity:
    properties:
      contents:
        items:
          $ref: '#/definitions/entity.Content'
        type: array
      createdAt:
        type: string
      hidden:
        items:
          type: string
        type: array
      messageID:
        type: string
      parentID:
        type: string
      recall:
        type: boolean
      timestamp:
        type: string
      updatedAt:
        type: string
      userAvatar:
        type: string
      userID:
        type: string
      userName:
        type: string
    type: object
  entity.Content:
    properties:
      createdAt:
        type: string
      key:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  entity.Conversation:
    properties:
      chatAvatar:
        type: string
      chatID:
        type: string
      chatName:
        type: string
      createdAt:
        type: string
      deliveries:
        items:
          $ref: '#/definitions/entity.Delivery'
        type: array
      id_UserOrGroup:
        type: string
      reads:
        items:
          $ref: '#/definitions/entity.Delivery'
        type: array
      topChatActivities:
        items:
          $ref: '#/definitions/entity.ChatActivity'
        type: array
      type:
        type: string
      updatedAt:
        type: string
    type: object
  entity.Delivery:
    properties:
      createdAt:
        type: string
      messageID:
        type: string
      updatedAt:
        type: string
      userAvatar:
        type: string
      userID:
        type: string
      userName:
        type: string
    type: object
  entity.FriendRequest:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      isSender:
        type: boolean
      sendAt:
        type: string
      updatedAt:
        type: string
      userAvatar:
        type: string
      userID:
        type: string
      userName:
        type: string
    type: object
  entity.Group:
    properties:
      admins:
        items:
          $ref: '#/definitions/entity.PersonInfo'
        type: array
      chatAvatar:
        type: string
      chatName:
        type: string
      createdAt:
        type: string
      id:
        type: string
      members:
        items:
          $ref: '#/definitions/entity.PersonInfo'
        type: array
      owner:
        $ref: '#/definitions/entity.PersonInfo'
      setting:
        $ref: '#/definitions/entity.GroupSetting'
      updatedAt:
        type: string
    type: object
  entity.GroupSetting:
    properties:
      changeChatNameAndAvatar:
        type: boolean
      createNewPolls:
        type: boolean
      membershipApproval:
        type: boolean
      pinMessages:
        type: boolean
      sendMessages:
        type: boolean
    type: object
  entity.PersonInfo:
    properties:
      createdAt:
        type: string
      updatedAt:
        type: string
      userAvatar:
        type: string
      userID:
        type: string
      userName:
        type: string
    type: object
  entity.Profile:
    properties:
      avatar:
        type: string
      background:
        type: string
      birthday:
        type: string
      createdAt:
        type: string
      gender:
        type: boolean
      updatedAt:
        type: string
      userID:
        type: string
      userName:
        type: string
    type: object
  entity.Setting:
    properties:
      allowMessaging:
        type: string
      showBirthday:
        type: string
    type: object
  entity.User:
    properties:
      conversations:
        items:
          $ref: '#/definitions/entity.Conversation'
        type: array
      friendRequests:
        items:
          $ref: '#/definitions/entity.FriendRequest'
        type: array
      id:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/account/change-avatar:
    put:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AccountChangeAvatarReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: ChangeAvatar
      tags:
      - account
  /api/v1/account/change-password:
    put:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AccountChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: ChangePassword
      tags:
      - account
  /api/v1/account/change-profile:
    put:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AccountChangeProfileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: ChangeProfile
      tags:
      - account
  /api/v1/account/check-phone:
    post:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AccountCheckPhoneNumberReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: CheckPhoneNumber
      tags:
      - account
  /api/v1/account/info:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetAccountProfile
      tags:
      - account
  /api/v1/account/profile:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetProfile
      tags:
      - account
  /api/v1/account/profile/{phoneNumber}:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetProfileByPhoneNumber
      tags:
      - account
  /api/v1/account/profile/suggest:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Profile'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetSuggestFriendProfiles
      tags:
      - account
  /api/v1/account/profile/userID/{userID}:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetProfileByUserID
      tags:
      - account
  /api/v1/account/reset-password:
    put:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AccountResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: ResetPassword
      tags:
      - account
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AccountLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AccessToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: Login
      tags:
      - authentications
  /api/v1/auth/logout:
    post:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: Logout
      tags:
      - authentications
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AccountRegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: Register
      tags:
      - authentications
  /api/v1/chat/create:
    post:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: CreateChat
      tags:
      - chat
  /api/v1/chat/get-search:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: chatID
        in: query
        name: chatID
        required: true
        type: string
      - description: messageID
        in: query
        name: messageID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.ChatActivity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetSearch
      tags:
      - chat
  /api/v1/chat/search-bkw:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: chatID
        in: query
        name: chatID
        required: true
        type: string
      - description: key
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.ChatActivity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: SearchByKeyWord
      tags:
      - chat
  /api/v1/chat/x-to-y:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: string
      - description: x
        in: query
        name: x
        required: true
        type: integer
      - description: "y"
        in: query
        name: "y"
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.ChatActivity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetChatActivityFromNToM
      tags:
      - chat
  /api/v1/group/create:
    post:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateGroupReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: CreateGroup
      tags:
      - group
  /api/v1/group/info:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: groupID
        in: query
        name: groupID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetGroupInfo
      tags:
      - group
  /api/v1/user/create:
    post:
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: CreateUser
      tags:
      - authentications
  /api/v1/user/info/{id}:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: GetUser
      tags:
      - user
  /api/v1/user/update-avatar-account:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: oldAvatar
        in: query
        name: oldAvatar
        required: true
        type: string
      - description: newAvatar
        in: query
        name: newAvatar
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.HTTPResp'
      summary: UpdateAvatarAsync
      tags:
      - user
swagger: "2.0"
